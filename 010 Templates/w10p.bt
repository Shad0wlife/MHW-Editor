//------------------------------------------------
//--- 010 Editor v10.0 Binary Template
//   Authors: Many. See MHW Editor Cretits.
// File Mask: *.w10p
//  Category: MHW-Editor
//------------------------------------------------

// W10p Params (1, Shared)
char Weapon[4]<optimize=false, name="Weapon">;
uint Unk_1<name="Unk 1 (uint)">;

// Unk Arr 1 (Shared)
typedef struct {
    float Unk_1<name="Unk 1 (float)">;
    float Unk_2<name="Unk 2 (float)">;
    float Unk_3<name="Unk 3 (float)">;
    ubyte Unk_4<name="Unk 4 (ubyte)">;
    float Unk_5<name="Unk 5 (float)">;
} Unk_Arr_1_Shared_;

Unk_Arr_1_Shared_ Unk_Arr_1_Shared__[20]<optimize=false, name="Unk Arr 1 (Shared)">;

// W10p Params (2, Shared)
float Unk_2<name="Unk 2 (float)">;
float Unk_3<name="Unk 3 (float)">;
float Unk_4<name="Unk 4 (float)">;
float Unk_5<name="Unk 5 (float)">;
float Unk_6<name="Unk 6 (float)">;
float Unk_7<name="Unk 7 (float)">;
float Unk_8<name="Unk 8 (float)">;
float Unk_9<name="Unk 9 (float)">;
float Unk_10<name="Unk 10 (float)">;
float Unk_11<name="Unk 11 (float)">;
float Unk_12<name="Unk 12 (float)">;
float Unk_13<name="Unk 13 (float)">;
float Unk_14<name="Unk 14 (float)">;
float Unk_15<name="Unk 15 (float)">;
float Unk_16<name="Unk 16 (float)">;
float Unk_17<name="Unk 17 (float)">;
ubyte Sharpness_Consumed_Melee_Only_<name="Sharpness Consumed (Melee Only) (ubyte)">;
ubyte Guard_Knockback_Sharpness_Usage_Small<name="Guard Knockback Sharpness Usage: Small (ubyte)">;
ubyte Guard_Knockback_Sharpness_Usage_Medium<name="Guard Knockback Sharpness Usage: Medium (ubyte)">;
ubyte Guard_Knockback_Sharpness_Usage_Large<name="Guard Knockback Sharpness Usage: Large (ubyte)">;
float Weapon_Sweet_spot<name="Weapon Sweet-spot (float)">;
float Unk_23<name="Unk 23 (float)">;
float Unk_24<name="Unk 24 (float)">;
float Elderseal_Modifier_<name="Elderseal Modifier? (float)">;
ubyte Limit_Until_The_Tic_Damage_Decreases_1shot_e_g_Pierce_Slice_Ammo_<name="Limit Until The Tic Damage Decreases 1shot (e.g. Pierce / Slice Ammo) (ubyte)">;
float Decreases_Tic_Damage_Over_The_Limit<name="Decreases Tic Damage Over The Limit (float)">;

// Guard Angles (Shared)
typedef struct {
    float Guard_Angle_Both_Sides_<name="Guard Angle (Both Sides) (float)">;
    ubyte Knockback_Threshold_Small<name="Knockback Threshold Small (ubyte)">;
    ubyte Knockback_Threshold_Medium<name="Knockback Threshold Medium (ubyte)">;
    ubyte Knockback_Threshold_Large<name="Knockback Threshold Large (ubyte)">;
} Guard_Angles_Shared_;

Guard_Angles_Shared_ Guard_Angles_Shared__[2]<optimize=false, name="Guard Angles (Shared)">;

// W10p Params (3, Shared)
float Unk_28<name="Unk 28 (float)">;
float Unk_29<name="Unk 29 (float)">;
float Unk_30<name="Unk 30 (float)">;
float Unk_31<name="Unk 31 (float)">;
float Unk_32<name="Unk 32 (float)">;
float Unk_33<name="Unk 33 (float)">;
float Unk_34<name="Unk 34 (float)">;
float Unk_35<name="Unk 35 (float)">;
float Unk_36<name="Unk 36 (float)">;
float Unk_37<name="Unk 37 (float)">;
float Unk_38<name="Unk 38 (float)">;
float Unk_39<name="Unk 39 (float)">;
float Unk_40<name="Unk 40 (float)">;
float Unk_41<name="Unk 41 (float)">;
float Unk_42<name="Unk 42 (float)">;
float Unk_43<name="Unk 43 (float)">;
float Unk_44<name="Unk 44 (float)">;
float Unk_45<name="Unk 45 (float)">;
float Unk_46<name="Unk 46 (float)">;
float Unk_47<name="Unk 47 (float)">;
float Unk_48<name="Unk 48 (float)">;
uint Unk_49<name="Unk 49 (uint)">;
uint Unk_50<name="Unk 50 (uint)">;
float Unk_51<name="Unk 51 (float)">;
float Unk_52<name="Unk 52 (float)">;
float Unk_53<name="Unk 53 (float)">;
float Unk_54<name="Unk 54 (float)">;
float Unk_55<name="Unk 55 (float)">;
float Unk_56<name="Unk 56 (float)">;
float Unk_57<name="Unk 57 (float)">;
float Unk_58<name="Unk 58 (float)">;
float Unk_59<name="Unk 59 (float)">;
float Unk_60<name="Unk 60 (float)">;
float Unk_61<name="Unk 61 (float)">;
float Unk_62<name="Unk 62 (float)">;
float Unk_63<name="Unk 63 (float)">;
float Unk_64<name="Unk 64 (float)">;
float Unk_65<name="Unk 65 (float)">;
float Unk_66<name="Unk 66 (float)">;
float Unk_67<name="Unk 67 (float)">;
float Unk_68<name="Unk 68 (float)">;
float Unk_69<name="Unk 69 (float)">;
float Unk_70<name="Unk 70 (float)">;
float Unk_71<name="Unk 71 (float)">;
ubyte Unk_72<name="Unk 72 (ubyte)">;
uint Unk_73<name="Unk 73 (uint)">;
float Unk_74<name="Unk 74 (float)">;
float Unk_75<name="Unk 75 (float)">;
float Unk_76<name="Unk 76 (float)">;

// Unk Arr 2 (Shared)
typedef struct {
    ubyte Unk_1<name="Unk 1 (ubyte)">;
    int Unk_2<name="Unk 2 (int)">;
    float Unk_3<name="Unk 3 (float)">;
    float Unk_4<name="Unk 4 (float)">;
    float Unk_5<name="Unk 5 (float)">;
    float Unk_6<name="Unk 6 (float)">;
    float Unk_7<name="Unk 7 (float)">;
    float Unk_8<name="Unk 8 (float)">;
    float Unk_9<name="Unk 9 (float)">;
    float Unk_10<name="Unk 10 (float)">;
    float Unk_11<name="Unk 11 (float)">;
    float Unk_12<name="Unk 12 (float)">;
    float Unk_13<name="Unk 13 (float)">;
    float Unk_14<name="Unk 14 (float)">;
    float Unk_15<name="Unk 15 (float)">;
} Unk_Arr_2_Shared_;

Unk_Arr_2_Shared_ Unk_Arr_2_Shared__[8]<optimize=false, name="Unk Arr 2 (Shared)">;

// W10p Params (4, Shared)
ubyte Unk_77<name="Unk 77 (ubyte)">;
int Unk_78<name="Unk 78 (int)">;
float Unk_79<name="Unk 79 (float)">;
float Unk_80<name="Unk 80 (float)">;
float Unk_81<name="Unk 81 (float)">;
float Unk_82<name="Unk 82 (float)">;
float Unk_83<name="Unk 83 (float)">;
float Unk_84<name="Unk 84 (float)">;
float Unk_85<name="Unk 85 (float)">;
float Unk_86<name="Unk 86 (float)">;
float Unk_87<name="Unk 87 (float)">;
float Unk_88<name="Unk 88 (float)">;
float Unk_89<name="Unk 89 (float)">;
float Unk_90<name="Unk 90 (float)">;
float Unk_15_10_1<name="Unk (15.10) 1 (float)">;
float Unk_15_10_2<name="Unk (15.10) 2 (float)">;
float Unk_15_10_3<name="Unk (15.10) 3 (float)">;
float Unk_15_10_4<name="Unk (15.10) 4 (float)">;
float Unk_15_10_5<name="Unk (15.10) 5 (float)">;
float Unk_15_10_6<name="Unk (15.10) 6 (float)">;

// W10p Params (5)
float Red_Extract_Duration<name="Red Extract Duration (float)">;
float White_Extract_Duration<name="White Extract Duration (float)">;
float Orange_Extract_Duration<name="Orange Extract Duration (float)">;
float Triple_Extract_Duration<name="Triple Extract Duration (float)">;
float Twinkling_When_Extraction_Time_Remaining_is_10s<name="Twinkling When Extraction Time Remaining is 10s (float)">;
float Damage_Buff_Red_Plus_White<name="Damage Buff: Red + White (float)">;
float Damage_Buff_All_Three_Extracts<name="Damage Buff: All Three Extracts (float)">;
float Speed_Buff_White<name="Speed Buff: White (float)">;
float Moving_Displacement_Multi_Buff_White<name="Moving Displacement Multi Buff: White (float)">;
float Defense_Buff_Orange<name="Defense Buff: Orange (float)">;
float Defense_Buff_Orange_Plus_White<name="Defense Buff: Orange + White (float)">;

// Action Param (Relate Vault)
typedef struct {
    float Gravity<name="Gravity (float)">;
    float Time_Rate<name="Time Rate (float)">;
    float Initial_X_Velocity<name="Initial X Velocity (float)">;
    float Initial_Y_Velocity<name="Initial Y Velocity (float)">;
    float Initial_Z_Velocity<name="Initial Z Velocity (float)">;
} Action_Param_Relate_Vault_;

Action_Param_Relate_Vault_ Action_Param_Relate_Vault__[16]<optimize=false, name="Action Param (Relate Vault)">;

// W10p Params (6)
float Unk_98<name="Unk 98 (float)">;
float Unk_99<name="Unk 99 (float)">;
float Unk_100<name="Unk 100 (float)">;

// Action Param (Relate Vault Dance)
typedef struct {
    float Gravity<name="Gravity (float)">;
    float Time_Rate<name="Time Rate (float)">;
    float Initial_X_Velocity<name="Initial X Velocity (float)">;
    float Initial_Y_Velocity<name="Initial Y Velocity (float)">;
    float Initial_Z_Velocity<name="Initial Z Velocity (float)">;
} Action_Param_Relate_Vault_Dance_;

Action_Param_Relate_Vault_Dance_ Action_Param_Relate_Vault_Dance__<name="Action Param (Relate Vault Dance)">;

// W10p Params (7)
uint Jumping_Advancing_Slashes_Repeat_Limit_Count_Can_vault_dance_N_times_per_jump_<name="Jumping Advancing Slashes Repeat Limit Count (Can vault dance N times per jump.) (uint)">;
float Unk_102<name="Unk 102 (float)">;

// Action Param (Relate Mid-air Evade)
typedef struct {
    float Gravity<name="Gravity (float)">;
    float Time_Rate<name="Time Rate (float)">;
    float Initial_X_Velocity<name="Initial X Velocity (float)">;
    float Initial_Y_Velocity<name="Initial Y Velocity (float)">;
    float Initial_Z_Velocity<name="Initial Z Velocity (float)">;
} Action_Param_Relate_Mid_air_Evade_;

Action_Param_Relate_Mid_air_Evade_ Action_Param_Relate_Mid_air_Evade__[9]<optimize=false, name="Action Param (Relate Mid-air Evade)">;

// W10p Params (8)
float Unk_103<name="Unk 103 (float)">;
float Unk_104<name="Unk 104 (float)">;

// Action Param (Relate Jumping Attacks)
typedef struct {
    float Gravity<name="Gravity (float)">;
    float Time_Rate<name="Time Rate (float)">;
    float Initial_X_Velocity<name="Initial X Velocity (float)">;
    float Initial_Y_Velocity<name="Initial Y Velocity (float)">;
    float Initial_Z_Velocity<name="Initial Z Velocity (float)">;
} Action_Param_Relate_Jumping_Attacks_;

Action_Param_Relate_Jumping_Attacks_ Action_Param_Relate_Jumping_Attacks__[22]<optimize=false, name="Action Param (Relate Jumping Attacks)">;

// W10p Params (9)
float Unk_105<name="Unk 105 (float)">;
float Unk_106<name="Unk 106 (float)">;
float Unk_107<name="Unk 107 (float)">;
float Unk_108<name="Unk 108 (float)">;

// Action Param (Relate Wall Vault, Wall Opposite Vault, White Extract or Not)
typedef struct {
    float Gravity<name="Gravity (float)">;
    float Time_Rate<name="Time Rate (float)">;
    float Initial_X_Velocity<name="Initial X Velocity (float)">;
    float Initial_Y_Velocity<name="Initial Y Velocity (float)">;
    float Initial_Z_Velocity<name="Initial Z Velocity (float)">;
} Action_Param_Relate_Wall_Vault_Wall_Opposite_Vault_White_Extract_or_Not_;

Action_Param_Relate_Wall_Vault_Wall_Opposite_Vault_White_Extract_or_Not_ Action_Param_Relate_Wall_Vault_Wall_Opposite_Vault_White_Extract_or_Not__[4]<optimize=false, name="Action Param (Relate Wall Vault, Wall Opposite Vault, White Extract or Not)">;

// W10p Params (10)
float Unk_109<name="Unk 109 (float)">;
float Unk_110<name="Unk 110 (float)">;
float Sever_Boost<name="Sever Boost (float)">;
float Blunt_Boost<name="Blunt Boost (float)">;
float Elemental_Boost<name="Elemental Boost (float)">;
float Speed_Boost<name="Speed Boost (float)">;
float Kinsect_Stamina_Extract_Boost<name="Kinsect Stamina Extract Boost (float)">;
float Kinsect_Stamina_On_Recall_Boost<name="Kinsect Stamina On Recall Boost (float)">;
float Kinsect_Stamina_Drain_Boost<name="Kinsect Stamina Drain Boost (float)">;
float Kinsect_Healing_Extract_Boost<name="Kinsect Healing Extract Boost (float)">;
float Unk_119<name="Unk 119 (float)">;
float Unk_120<name="Unk 120 (float)">;
float Unk_121<name="Unk 121 (float)">;
float Unk_122<name="Unk 122 (float)">;
float Unk_123<name="Unk 123 (float)">;
float Unk_124<name="Unk 124 (float)">;
float Unk_125<name="Unk 125 (float)">;
float Kinsect_Max_Flight_Range<name="Kinsect Max Flight Range (float)">;
float Unk_127<name="Unk 127 (float)">;
float Unk_128<name="Unk 128 (float)">;
float Unk_129<name="Unk 129 (float)">;
float Unk_130<name="Unk 130 (float)">;
float Unk_131<name="Unk 131 (float)">;
float Unk_132<name="Unk 132 (float)">;
float Unk_133<name="Unk 133 (float)">;
float Unk_134<name="Unk 134 (float)">;
float Unk_135<name="Unk 135 (float)">;
float Unk_136<name="Unk 136 (float)">;
float Unk_137<name="Unk 137 (float)">;
float Unk_138<name="Unk 138 (float)">;
float Kinsect_Stamina_Drain_per_Second<name="Kinsect Stamina Drain per Second (float)">;
float Kinsect_Max_Stamina<name="Kinsect Max Stamina (float)">;
float Reaction_Time_on_Kinsect_Recall<name="Reaction Time on Kinsect Recall (float)">;
float Kinsect_Stamina_on_Recall<name="Kinsect Stamina on Recall (float)">;
float Kinsect_Penetration_Speed_During_Descending_Thrust<name="Kinsect Penetration Speed During Descending Thrust (float)">;
float Unk_144<name="Unk 144 (float)">;
float Kinsect_Dust_Interval_Blast<name="Kinsect Dust Interval: Blast (float)">;
float Kinsect_Dust_Interval_Heal<name="Kinsect Dust Interval: Heal (float)">;
float Kinsect_Dust_Interval_Paralysis<name="Kinsect Dust Interval: Paralysis (float)">;
float Kinsect_Dust_Interval_Poison<name="Kinsect Dust Interval: Poison (float)">;
float Unk_149<name="Unk 149 (float)">;
float Unk_150<name="Unk 150 (float)">;

// Kinsect Stats
typedef struct {
    float Level_1<name="Level 1 (float)">;
    float Level_2<name="Level 2 (float)">;
    float Level_3<name="Level 3 (float)">;
    float Level_4<name="Level 4 (float)">;
    float Level_5<name="Level 5 (float)">;
    float Level_6<name="Level 6 (float)">;
    float Level_7<name="Level 7 (float)">;
    float Level_8<name="Level 8 (float)">;
    float Level_9<name="Level 9 (float)">;
    float Level_10<name="Level 10 (float)">;
    float Level_11<name="Level 11 (float)">;
    float Level_12<name="Level 12 (float)">;
    float Level_13<name="Level 13 (float)">;
    float Level_14<name="Level 14 (float)">;
    float Level_15<name="Level 15 (float)">;
    float Level_16<name="Level 16 (float)">;
    float Level_17<name="Level 17 (float)">;
    float Level_18<name="Level 18 (float)">;
    float Level_19<name="Level 19 (float)">;
    float Level_20<name="Level 20 (float)">;
} Kinsect_Stats;

Kinsect_Stats Kinsect_Stats_[9]<optimize=false, name="Kinsect Stats">;

// W10p Params (11)
float Unk_151<name="Unk 151 (float)">;
float Unk_152<name="Unk 152 (float)">;
float Unk_153<name="Unk 153 (float)">;
float Unk_154<name="Unk 154 (float)">;
float Unk_155<name="Unk 155 (float)">;
float Unk_156<name="Unk 156 (float)">;
float Kinsect_Buff_Red<name="Kinsect Buff: Red (float)">;
float Kinsect_Buff_White<name="Kinsect Buff: White (float)">;
float Kinsect_Buff_Orange<name="Kinsect Buff: Orange (float)">;
float Kinsect_Buff_All_Three_Extracts<name="Kinsect Buff: All Three Extracts (float)">;
float Kinsect_Charge_Power_Attack_Power<name="Kinsect Charge(Power) Attack Power (float)">;
float Kinsect_Charge_Power_Elemental_Attack_Power<name="Kinsect Charge(Power) Elemental Attack Power (float)">;
float Kinsect_Charge_Power_Dust_Effect_Multiplier<name="Kinsect Charge(Power) Dust Effect Multiplier (float)">;
float Kinsect_Charge_Spirit_Max_Plus_Regen_Stamina<name="Kinsect Charge(Spirit) Max + Regen Stamina (float)">;
float Kinsect_Charge_Power_Dust_Interval<name="Kinsect Charge(Power) Dust Interval (float)">;
float Kinsect_Charge_Piercing_Pod<name="Kinsect Charge: Piercing Pod (float)">;
float Kinsect_Charge_Stone<name="Kinsect Charge: Stone (float)">;
float Kinsect_Charge_Redpit<name="Kinsect Charge: Redpit (float)">;
float Kinsect_Charge_Scatternut<name="Kinsect Charge: Scatternut (float)">;
float Kinsect_Charge_Crystalburst<name="Kinsect Charge: Crystalburst (float)">;
float Kinsect_Charge_Thorn_Pod<name="Kinsect Charge: Thorn Pod (float)">;
float Kinsect_Charge_Torch_Pod<name="Kinsect Charge: Torch Pod (float)">;
float Kinsect_Charge_Puddle_Pod<name="Kinsect Charge: Puddle Pod (float)">;
float Kinsect_Charge_Dragon_Pod<name="Kinsect Charge: Dragon Pod (float)">;
float Kinsect_Charge_Bomb_Pod<name="Kinsect Charge: Bomb Pod (float)">;
float Kinsect_Charge_Brightmoss<name="Kinsect Charge: Brightmoss (float)">;

// Unk Arr 4 (All sint8)
typedef struct {
    byte Unk_1<name="Unk 1 (byte)">;
    byte Unk_2<name="Unk 2 (byte)">;
    byte Unk_3<name="Unk 3 (byte)">;
    byte Unk_4<name="Unk 4 (byte)">;
} Unk_Arr_4_All_sint8_;

Unk_Arr_4_All_sint8_ Unk_Arr_4_All_sint8__[14]<optimize=false, name="Unk Arr 4 (All sint8)">;

// W10p Params (12)
float Unk_177<name="Unk 177 (float)">;
float Unk_178<name="Unk 178 (float)">;
float Unk_179<name="Unk 179 (float)">;
float Unk_180<name="Unk 180 (float)">;
float Unk_181<name="Unk 181 (float)">;

// Unk Arr 5 (All sint8)
typedef struct {
    byte Unk_1<name="Unk 1 (byte)">;
    byte Unk_2<name="Unk 2 (byte)">;
    byte Unk_3<name="Unk 3 (byte)">;
    byte Unk_4<name="Unk 4 (byte)">;
    byte Unk_5<name="Unk 5 (byte)">;
    byte Unk_6<name="Unk 6 (byte)">;
    byte Unk_7<name="Unk 7 (byte)">;
    byte Unk_8<name="Unk 8 (byte)">;
    byte Unk_9<name="Unk 9 (byte)">;
    byte Unk_10<name="Unk 10 (byte)">;
    byte Unk_11<name="Unk 11 (byte)">;
    byte Unk_12<name="Unk 12 (byte)">;
} Unk_Arr_5_All_sint8_;

Unk_Arr_5_All_sint8_ Unk_Arr_5_All_sint8__<name="Unk Arr 5 (All sint8)">;

// W10p Params (13)
float Unk_182<name="Unk 182 (float)">;
float Descending_Thrust_Kinsect_Following_Speed_Multiplier<name="Descending Thrust Kinsect Following Speed Multiplier (float)">;
float Unk_184<name="Unk 184 (float)">;
float Descending_Thrust_Kinsect_Following_Coordinate_Y_Offset<name="Descending Thrust Kinsect Following Coordinate Y Offset (float)">;
float Descending_Thrust_Kinsect_Following_Coordinate_Z_Offset<name="Descending Thrust Kinsect Following Coordinate Z Offset (float)">;

// Action Param (Relate Clutch Attack Finish)
typedef struct {
    float Gravity<name="Gravity (float)">;
    float Time_Rate<name="Time Rate (float)">;
    float Initial_X_Velocity<name="Initial X Velocity (float)">;
    float Initial_Y_Velocity<name="Initial Y Velocity (float)">;
    float Initial_Z_Velocity<name="Initial Z Velocity (float)">;
} Action_Param_Relate_Clutch_Attack_Finish_;

Action_Param_Relate_Clutch_Attack_Finish_ Action_Param_Relate_Clutch_Attack_Finish__<name="Action Param (Relate Clutch Attack Finish)">;
