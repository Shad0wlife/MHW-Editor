//------------------------------------------------
//--- 010 Editor v10.0 Binary Template
//   Authors: Many. See MHW Editor Cretits.
// File Mask: *.w08p
//  Category: MHW-Editor
//------------------------------------------------

// W08p Params (1, Shared)
char Weapon[4]<optimize=false, name="Weapon">;
uint Unk_1<name="Unk 1 (uint)">;

// Unk Arr 1 (Shared)
typedef struct {
    float Unk_1<name="Unk 1 (float)">;
    float Unk_2<name="Unk 2 (float)">;
    float Unk_3<name="Unk 3 (float)">;
    ubyte Unk_4<name="Unk 4 (ubyte)">;
    float Unk_5<name="Unk 5 (float)">;
} Unk_Arr_1_Shared_;

Unk_Arr_1_Shared_ Unk_Arr_1_Shared__[20]<optimize=false, name="Unk Arr 1 (Shared)">;

// W08p Params (2, Shared)
float Unk_2<name="Unk 2 (float)">;
float Unk_3<name="Unk 3 (float)">;
float Unk_4<name="Unk 4 (float)">;
float Unk_5<name="Unk 5 (float)">;
float Unk_6<name="Unk 6 (float)">;
float Unk_7<name="Unk 7 (float)">;
float Unk_8<name="Unk 8 (float)">;
float Unk_9<name="Unk 9 (float)">;
float Unk_10<name="Unk 10 (float)">;
float Unk_11<name="Unk 11 (float)">;
float Unk_12<name="Unk 12 (float)">;
float Unk_13<name="Unk 13 (float)">;
float Unk_14<name="Unk 14 (float)">;
float Unk_15<name="Unk 15 (float)">;
float Unk_16<name="Unk 16 (float)">;
float Unk_17<name="Unk 17 (float)">;
ubyte Sharpness_Consumed_Melee_Only_<name="Sharpness Consumed (Melee Only) (ubyte)">;
ubyte Guard_Knockback_Sharpness_Usage_Small<name="Guard Knockback Sharpness Usage: Small (ubyte)">;
ubyte Guard_Knockback_Sharpness_Usage_Medium<name="Guard Knockback Sharpness Usage: Medium (ubyte)">;
ubyte Guard_Knockback_Sharpness_Usage_Large<name="Guard Knockback Sharpness Usage: Large (ubyte)">;
float Weapon_Sweet_spot<name="Weapon Sweet-spot (float)">;
float Unk_23<name="Unk 23 (float)">;
float Unk_24<name="Unk 24 (float)">;
float Elderseal_Modifier_<name="Elderseal Modifier? (float)">;
ubyte Limit_Until_The_Tic_Damage_Decreases_1shot_e_g_Pierce_Slice_Ammo_<name="Limit Until The Tic Damage Decreases 1shot (e.g. Pierce / Slice Ammo) (ubyte)">;
float Decreases_Tic_Damage_Over_The_Limit<name="Decreases Tic Damage Over The Limit (float)">;

// Guard Angles (Shared)
typedef struct {
    float Guard_Angle_Both_Sides_<name="Guard Angle (Both Sides) (float)">;
    ubyte Knockback_Threshold_Small<name="Knockback Threshold Small (ubyte)">;
    ubyte Knockback_Threshold_Medium<name="Knockback Threshold Medium (ubyte)">;
    ubyte Knockback_Threshold_Large<name="Knockback Threshold Large (ubyte)">;
} Guard_Angles_Shared_;

Guard_Angles_Shared_ Guard_Angles_Shared__[2]<optimize=false, name="Guard Angles (Shared)">;

// W08p Params (3, Shared)
float Unk_28<name="Unk 28 (float)">;
float Unk_29<name="Unk 29 (float)">;
float Unk_30<name="Unk 30 (float)">;
float Unk_31<name="Unk 31 (float)">;
float Unk_32<name="Unk 32 (float)">;
float Unk_33<name="Unk 33 (float)">;
float Unk_34<name="Unk 34 (float)">;
float Unk_35<name="Unk 35 (float)">;
float Unk_36<name="Unk 36 (float)">;
float Unk_37<name="Unk 37 (float)">;
float Unk_38<name="Unk 38 (float)">;
float Unk_39<name="Unk 39 (float)">;
float Unk_40<name="Unk 40 (float)">;
float Unk_41<name="Unk 41 (float)">;
float Unk_42<name="Unk 42 (float)">;
float Unk_43<name="Unk 43 (float)">;
float Unk_44<name="Unk 44 (float)">;
float Unk_45<name="Unk 45 (float)">;
float Unk_46<name="Unk 46 (float)">;
float Unk_47<name="Unk 47 (float)">;
float Unk_48<name="Unk 48 (float)">;
uint Unk_49<name="Unk 49 (uint)">;
uint Unk_50<name="Unk 50 (uint)">;
float Unk_51<name="Unk 51 (float)">;
float Unk_52<name="Unk 52 (float)">;
float Unk_53<name="Unk 53 (float)">;
float Unk_54<name="Unk 54 (float)">;
float Unk_55<name="Unk 55 (float)">;
float Unk_56<name="Unk 56 (float)">;
float Unk_57<name="Unk 57 (float)">;
float Unk_58<name="Unk 58 (float)">;
float Unk_59<name="Unk 59 (float)">;
float Unk_60<name="Unk 60 (float)">;
float Unk_61<name="Unk 61 (float)">;
float Unk_62<name="Unk 62 (float)">;
float Unk_63<name="Unk 63 (float)">;
float Unk_64<name="Unk 64 (float)">;
float Unk_65<name="Unk 65 (float)">;
float Unk_66<name="Unk 66 (float)">;
float Unk_67<name="Unk 67 (float)">;
float Unk_68<name="Unk 68 (float)">;
float Unk_69<name="Unk 69 (float)">;
float Unk_70<name="Unk 70 (float)">;
float Unk_71<name="Unk 71 (float)">;
ubyte Unk_72<name="Unk 72 (ubyte)">;
uint Unk_73<name="Unk 73 (uint)">;
float Unk_74<name="Unk 74 (float)">;
float Unk_75<name="Unk 75 (float)">;
float Unk_76<name="Unk 76 (float)">;

// Unk Arr 2 (Shared)
typedef struct {
    ubyte Unk_1<name="Unk 1 (ubyte)">;
    int Unk_2<name="Unk 2 (int)">;
    float Unk_3<name="Unk 3 (float)">;
    float Unk_4<name="Unk 4 (float)">;
    float Unk_5<name="Unk 5 (float)">;
    float Unk_6<name="Unk 6 (float)">;
    float Unk_7<name="Unk 7 (float)">;
    float Unk_8<name="Unk 8 (float)">;
    float Unk_9<name="Unk 9 (float)">;
    float Unk_10<name="Unk 10 (float)">;
    float Unk_11<name="Unk 11 (float)">;
    float Unk_12<name="Unk 12 (float)">;
    float Unk_13<name="Unk 13 (float)">;
    float Unk_14<name="Unk 14 (float)">;
    float Unk_15<name="Unk 15 (float)">;
} Unk_Arr_2_Shared_;

Unk_Arr_2_Shared_ Unk_Arr_2_Shared__[8]<optimize=false, name="Unk Arr 2 (Shared)">;

// W08p Params (4, Shared)
ubyte Unk_77<name="Unk 77 (ubyte)">;
int Unk_78<name="Unk 78 (int)">;
float Unk_79<name="Unk 79 (float)">;
float Unk_80<name="Unk 80 (float)">;
float Unk_81<name="Unk 81 (float)">;
float Unk_82<name="Unk 82 (float)">;
float Unk_83<name="Unk 83 (float)">;
float Unk_84<name="Unk 84 (float)">;
float Unk_85<name="Unk 85 (float)">;
float Unk_86<name="Unk 86 (float)">;
float Unk_87<name="Unk 87 (float)">;
float Unk_88<name="Unk 88 (float)">;
float Unk_89<name="Unk 89 (float)">;
float Unk_90<name="Unk 90 (float)">;
float Unk_15_10_1<name="Unk (15.10) 1 (float)">;
float Unk_15_10_2<name="Unk (15.10) 2 (float)">;
float Unk_15_10_3<name="Unk (15.10) 3 (float)">;
float Unk_15_10_4<name="Unk (15.10) 4 (float)">;
float Unk_15_10_5<name="Unk (15.10) 5 (float)">;
float Unk_15_10_6<name="Unk (15.10) 6 (float)">;

// W08p Params (5)
uint Unk_91<name="Unk 91 (uint)">;
uint Unk_92<name="Unk 92 (uint)">;
float Unk_93<name="Unk 93 (float)">;
float Unk_94<name="Unk 94 (float)">;

// Action Param 1
typedef struct {
    float Gravity<name="Gravity (float)">;
    float Time_Rate<name="Time Rate (float)">;
    float Initial_X_Velocity<name="Initial X Velocity (float)">;
    float Initial_Y_Velocity<name="Initial Y Velocity (float)">;
    float Initial_Z_Velocity<name="Initial Z Velocity (float)">;
} Action_Param_1;

Action_Param_1 Action_Param_1_[2]<optimize=false, name="Action Param 1">;

// W08p Params (6)
uint Unk_95<name="Unk 95 (uint)">;
float Unk_96<name="Unk 96 (float)">;
uint How_Many_Wildswings_It_Takes_Before_It_Powers_Up<name="How Many Wildswings It Takes Before It Powers Up (uint)">;
float Wildswing_Damage_Multiplier_When_Powered_Up_<name="Wildswing Damage Multiplier (When Powered Up) (float)">;
float Overhead_Slash_Sword_Mode_Angle<name="Overhead Slash (Sword Mode) Angle (float)">;
float Overhead_Slash_Sword_Mode_Forward_Distance<name="Overhead Slash (Sword Mode) Forward Distance (float)">;
float Unk_101<name="Unk 101 (float)">;
float Power_Phial_Damage_Multiplier_Sword_Mode_<name="Power Phial Damage Multiplier (Sword Mode) (float)">;
float Element_Phial_Damage_Multiplier_Sword_Mode_<name="Element Phial Damage Multiplier (Sword Mode) (float)">;
float Stun_Buildup_Exhaust_Phial_<name="Stun Buildup (Exhaust Phial) (float)">;
float Unk_105<name="Unk 105 (float)">;
float Unk_106<name="Unk 106 (float)">;
float Unk_107<name="Unk 107 (float)">;
float Unk_108<name="Unk 108 (float)">;
float Unk_109<name="Unk 109 (float)">;
float Unk_110<name="Unk 110 (float)">;
float Unk_111<name="Unk 111 (float)">;
ushort Unk_112<name="Unk 112 (ushort)">;
ushort Gauge_Amount_Regen_on_Reload<name="Gauge Amount Regen on Reload (ushort)">;
ushort Unk_114<name="Unk 114 (ushort)">;
ushort Sword_Gauge_Regeneration_Axe_Mode_<name="Sword Gauge Regeneration (Axe Mode) (ushort)">;
float Sword_Gauge_Regeneration_Interval_Axe_Mode_<name="Sword Gauge Regeneration Interval (Axe Mode) (float)">;
ubyte Sword_Gauge_When_Switching_Between_Axe_Sword_Attack<name="Sword Gauge When Switching Between Axe/Sword Attack (ubyte)">;
ushort Impact_Paralysis_Poison_Amp_Threshold_to_Activate<name="Impact/Paralysis/Poison Amp Threshold to Activate (ushort)">;
ushort Element_Exhaust_Amp_Threshold_to_Activate<name="Element/Exhaust Amp Threshold to Activate (ushort)">;
ushort Dragon_Phial_Amp_Threshold_to_Activate<name="Dragon Phial Amp Threshold to Activate (ushort)">;
ushort Unk_121<name="Unk 121 (ushort)">;
ushort Unk_122<name="Unk 122 (ushort)">;
ushort Unk_123<name="Unk 123 (ushort)">;
float Sword_Amp_Duration<name="Sword Amp Duration (float)">;
uint Sword_Amp_Decay_Amount_When_Not_Fully_Charged<name="Sword Amp Decay Amount When Not Fully Charged (uint)">;
ubyte Unk_126<name="Unk 126 (ubyte)">;
ubyte Unk_127<name="Unk 127 (ubyte)">;
ubyte Unk_128<name="Unk 128 (ubyte)">;
ubyte Unk_129<name="Unk 129 (ubyte)">;
uint Ear_Plug_4<name="Ear Plug 4 (uint)">;
float Elemental_Discharge_Auto_Tick_Time_<name="Elemental Discharge Auto Tick Time? (float)">;
float Unk_132<name="Unk 132 (float)">;
float Unk_133<name="Unk 133 (float)">;
float Unk_134<name="Unk 134 (float)">;
float Unk_135<name="Unk 135 (float)">;
float Unk_136<name="Unk 136 (float)">;
float Unk_137<name="Unk 137 (float)">;
float Unk_138<name="Unk 138 (float)">;
float Elemental_Discharge_Finisher_Damage_Multiplier<name="Elemental Discharge Finisher Damage Multiplier (float)">;
float Zero_Sum_Elemental_Discharge_Damage_Multiplier_When_Released_Early<name="Zero Sum/Elemental Discharge Damage Multiplier When Released Early (float)">;
float Zero_Sum_Discharge_Damage_Multiplier<name="Zero Sum Discharge Damage Multiplier (float)">;
float Unk_142<name="Unk 142 (float)">;

// Action Param 2
typedef struct {
    float Gravity<name="Gravity (float)">;
    float Time_Rate<name="Time Rate (float)">;
    float Initial_X_Velocity<name="Initial X Velocity (float)">;
    float Initial_Y_Velocity<name="Initial Y Velocity (float)">;
    float Initial_Z_Velocity<name="Initial Z Velocity (float)">;
} Action_Param_2;

Action_Param_2 Action_Param_2_[2]<optimize=false, name="Action Param 2">;

// W08p Params (7)
float Unk_143<name="Unk 143 (float)">;
ushort Unk_144<name="Unk 144 (ushort)">;
ushort Unk_145<name="Unk 145 (ushort)">;
ushort Unk_146<name="Unk 146 (ushort)">;
ushort Unk_147<name="Unk 147 (ushort)">;
ushort Unk_148<name="Unk 148 (ushort)">;
ushort Unk_149<name="Unk 149 (ushort)">;
ushort Unk_150<name="Unk 150 (ushort)">;
ushort Unk_151<name="Unk 151 (ushort)">;
ushort Unk_152<name="Unk 152 (ushort)">;
ushort Unk_153<name="Unk 153 (ushort)">;
float Unk_154<name="Unk 154 (float)">;
float Unk_155<name="Unk 155 (float)">;
uint Unk_156<name="Unk 156 (uint)">;
float Unk_157<name="Unk 157 (float)">;
float Unk_158<name="Unk 158 (float)">;
float Unk_159<name="Unk 159 (float)">;
float Unk_160<name="Unk 160 (float)">;
float Unk_161<name="Unk 161 (float)">;
float Unk_162<name="Unk 162 (float)">;
float Unk_163<name="Unk 163 (float)">;
float Unk_164<name="Unk 164 (float)">;
float Unk_165<name="Unk 165 (float)">;
float Unk_166<name="Unk 166 (float)">;
float Unk_167<name="Unk 167 (float)">;
float Unk_168<name="Unk 168 (float)">;
float Unk_169<name="Unk 169 (float)">;
float Unk_170<name="Unk 170 (float)">;
float Power_Axe_Duration<name="Power Axe Duration (float)">;

// Action Param 3
typedef struct {
    float Gravity<name="Gravity (float)">;
    float Time_Rate<name="Time Rate (float)">;
    float Initial_X_Velocity<name="Initial X Velocity (float)">;
    float Initial_Y_Velocity<name="Initial Y Velocity (float)">;
    float Initial_Z_Velocity<name="Initial Z Velocity (float)">;
} Action_Param_3;

Action_Param_3 Action_Param_3_<name="Action Param 3">;
